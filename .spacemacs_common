;;  -*- mode:emacs-lisp -*-

;;; add this to dotspacemacs/user-config
;;(setq load-path
;;      (append '("~/dotfiles"
;;                ) load-path))
;;(load ".spacemacs_common")

(keyboard-translate ?\C-h ?\C-?)
;; global
(evil-define-key 'normal global-map
  (kbd "C-a") 'spacemacs/evil-numbers-transient-state/evil-numbers/inc-at-pt)
(evil-define-key 'normal global-map
  (kbd "C-x") 'spacemacs/evil-numbers-transient-state/evil-numbers/dec-at-pt)
(evil-define-key 'insert global-map
  (kbd "C-u") '(lambda ()(interactive)(kill-line 0)))
(evil-define-key 'insert global-map
  (kbd "C-k") '(lambda ()(interactive)(kill-line)))
(evil-define-key 'insert global-map
  (kbd "C-e") 'end-of-line)
(evil-define-key 'insert global-map
  (kbd "C-a") 'beginning-of-line)
;; python
(evil-define-key 'normal python-mode-map
  (kbd "C-c") 'spacemacs/python-execute-file)
;; org
(evil-define-key 'insert org-mode-map
  (kbd "M-M") 'org-insert-heading-respect-content)
(evil-define-key 'insert org-mode-map
  (kbd "M-m") 'org-meta-return)

;; eshell
;; 普通に設定すると二個目以降のeshell起動で
;; 設定が反映されない問題を回避するため関数化
(defun eshell-key-setting ()
  (evil-define-key 'insert eshell-mode-map
    (kbd "C-p") 'eshell-previous-matching-input-from-input)
  (evil-define-key 'insert eshell-mode-map
    (kbd "C-n") 'eshell-next-matching-input-from-input)
  (evil-define-key 'insert eshell-mode-map
    (kbd "C-u") 'eshell-kill-input)
  (evil-define-key 'insert eshell-mode-map
    (kbd "C-a") 'eshell-bol)
  (evil-define-key 'insert eshell-mode-map
    (kbd "C-r") 'eshell-previous-input)
  (evil-define-key 'insert eshell-mode-map
    (kbd "C-s") 'eshell-next-input)
)
(defun start-eshell (num) (interactive "P") (eshell num)(eshell-key-setting))
(spacemacs/set-leader-keys ":" 'start-eshell)
